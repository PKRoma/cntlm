Installation
~~~~~~~~~~~~
First, you have to compile cntlm. Using the Makefile, this should be very easy:

$ make

Cntlm does not require any dynamic libraries and there are no dependencies you
have to satisfy before compilation, except for libpthreads. This library is
required for all threaded applications and is very likely to be part of your
system already, because it comes with libc. Next, install cntlm onto your
system like so:

$ make install

Default installation directories are /usr/local/bin, /usr/local/share/man and
/usr/local/etc. Should you want to install cntlm into a different location,
change the BINDIR, MANDIR and SYSCONFDIR in the Makefile. Installation uses
the "install" helper, which has many differences across various platforms.
Currently, we use GNU flavour by default and autodetect AIX. You might need
to change some parameters on other POSIX systems.

Cntlm is compiled with system-wide configuration file by default. That means
whenever you run cntlm, it looks into a hardcoded path (see SYSCONFDIR in the
Makefile) and tries to load cntml.conf. You cannot make it not to do so, unless
you use -c with an alternative file or /dev/null. This is standard behaviour
and probably what you want. On the other hand, some of you might not want to
use cntlm as a daemon started by init scripts and you would prefer setting up
everything on the command line. This is possible, just comment out SYSCONFDIR
variable definition in the Makefile before you compile cntlm and it will remove
this feature.

Installation includes the main binary, the man page (see "man cntlm") and if
the default config feature was not removed, it also installs a configuration
template. Please note that unlike bin and man targets, existing configuration
is never overwritten during installation. In the doc/ directory you can find
among other things a file called "cntlmd". It can be used as an init.d script.


Architectures
~~~~~~~~~~~~~
If you are building cntlm on a non-Linux/i386 platform, you have to deal with
the endianness of the host machine. Default is to build for little endian
(i386, ia64, amd64, alpha, s390, mipsel, vax). Alternatively, you can choose
to build for big endian (powerpc, m68k, sparc, mips) - this includes AIX on
pSeries. Specification of the proper endianness has to be done for all modules.
Make sure all of them are compiled with this option:

$ make clean
$ FLAGS=-DNTLM_BIG_ENDIAN make

With incorrect endianness specification cntlm compiles seemingly OK, but any
network communication will malfunction (most notably NTLM authentication).


Compilers
~~~~~~~~~
Cntlm was tested and successfully compiles with GCC and IBM XL C/C++. Other
compilers might work for you (then again, they might not). To compile with
XLC, use:

$ make -f Makefile.xlc ...

or rename Makefile.xlc to Makefile. The rest is the same.


Contact
~~~~~~~
David Kubicek <dave@awk.cz>, <kubicek@gedas.cz>
